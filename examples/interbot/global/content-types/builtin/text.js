//CHECKSUM:1c5f2f470775c41cfa27219c5ed884daf4a4bb9b3b57e4e25973285eca0aaea7
"use strict";

const base = require('./_base');

function render(data) {
  const events = [];

  if (data.typing) {
    events.push({
      type: 'typing',
      value: data.typing
    });
  }

  return [...events, {
    type: 'text',
    markdown: true,
    text: data.text
  }];
}

function renderMessenger(data) {
  return [{
    type: 'typing',
    value: data.typing
  }, {
    text: data.text
  }];
}

function renderElement(data, channel) {
  if (channel === 'web' || channel === 'api' || channel === 'telegram') {
    return render(data);
  } else if (channel === 'messenger') {
    return renderMessenger(data);
  }

  return []; // TODO
}

module.exports = {
  id: 'builtin_text',
  group: 'Built-in Messages',
  title: 'Text',
  jsonSchema: {
    description: 'A regular text message with optional typing indicators and alternates',
    type: 'object',
    required: ['text'],
    properties: {
      text: {
        type: 'string',
        title: 'Message'
      },
      variations: {
        type: 'array',
        title: 'Alternates (optional)',
        items: {
          type: 'string',
          default: ''
        }
      },
      ...base.typingIndicators
    }
  },
  uiSchema: {
    text: {
      'ui:widget': 'textarea'
    },
    variations: {
      'ui:options': {
        orderable: false
      }
    }
  },
  computePreviewText: formData => 'Text: ' + formData.text,
  renderElement: renderElement
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRleHQuanMiXSwibmFtZXMiOlsiYmFzZSIsInJlcXVpcmUiLCJyZW5kZXIiLCJkYXRhIiwiZXZlbnRzIiwidHlwaW5nIiwicHVzaCIsInR5cGUiLCJ2YWx1ZSIsIm1hcmtkb3duIiwidGV4dCIsInJlbmRlck1lc3NlbmdlciIsInJlbmRlckVsZW1lbnQiLCJjaGFubmVsIiwibW9kdWxlIiwiZXhwb3J0cyIsImlkIiwiZ3JvdXAiLCJ0aXRsZSIsImpzb25TY2hlbWEiLCJkZXNjcmlwdGlvbiIsInJlcXVpcmVkIiwicHJvcGVydGllcyIsInZhcmlhdGlvbnMiLCJpdGVtcyIsImRlZmF1bHQiLCJ0eXBpbmdJbmRpY2F0b3JzIiwidWlTY2hlbWEiLCJvcmRlcmFibGUiLCJjb21wdXRlUHJldmlld1RleHQiLCJmb3JtRGF0YSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXBCOztBQUVBLFNBQVNDLE1BQVQsQ0FBZ0JDLElBQWhCLEVBQXNCO0FBQ3BCLFFBQU1DLE1BQU0sR0FBRyxFQUFmOztBQUVBLE1BQUlELElBQUksQ0FBQ0UsTUFBVCxFQUFpQjtBQUNmRCxJQUFBQSxNQUFNLENBQUNFLElBQVAsQ0FBWTtBQUNWQyxNQUFBQSxJQUFJLEVBQUUsUUFESTtBQUVWQyxNQUFBQSxLQUFLLEVBQUVMLElBQUksQ0FBQ0U7QUFGRixLQUFaO0FBSUQ7O0FBRUQsU0FBTyxDQUNMLEdBQUdELE1BREUsRUFFTDtBQUNFRyxJQUFBQSxJQUFJLEVBQUUsTUFEUjtBQUVFRSxJQUFBQSxRQUFRLEVBQUUsSUFGWjtBQUdFQyxJQUFBQSxJQUFJLEVBQUVQLElBQUksQ0FBQ087QUFIYixHQUZLLENBQVA7QUFRRDs7QUFFRCxTQUFTQyxlQUFULENBQXlCUixJQUF6QixFQUErQjtBQUM3QixTQUFPLENBQ0w7QUFDRUksSUFBQUEsSUFBSSxFQUFFLFFBRFI7QUFFRUMsSUFBQUEsS0FBSyxFQUFFTCxJQUFJLENBQUNFO0FBRmQsR0FESyxFQUtMO0FBQ0VLLElBQUFBLElBQUksRUFBRVAsSUFBSSxDQUFDTztBQURiLEdBTEssQ0FBUDtBQVNEOztBQUVELFNBQVNFLGFBQVQsQ0FBdUJULElBQXZCLEVBQTZCVSxPQUE3QixFQUFzQztBQUNwQyxNQUFJQSxPQUFPLEtBQUssS0FBWixJQUFxQkEsT0FBTyxLQUFLLEtBQWpDLElBQTBDQSxPQUFPLEtBQUssVUFBMUQsRUFBc0U7QUFDcEUsV0FBT1gsTUFBTSxDQUFDQyxJQUFELENBQWI7QUFDRCxHQUZELE1BRU8sSUFBSVUsT0FBTyxLQUFLLFdBQWhCLEVBQTZCO0FBQ2xDLFdBQU9GLGVBQWUsQ0FBQ1IsSUFBRCxDQUF0QjtBQUNEOztBQUVELFNBQU8sRUFBUCxDQVBvQyxDQU8xQjtBQUNYOztBQUVEVyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsRUFBRSxFQUFFLGNBRFc7QUFFZkMsRUFBQUEsS0FBSyxFQUFFLG1CQUZRO0FBR2ZDLEVBQUFBLEtBQUssRUFBRSxNQUhRO0FBS2ZDLEVBQUFBLFVBQVUsRUFBRTtBQUNWQyxJQUFBQSxXQUFXLEVBQUUsdUVBREg7QUFFVmIsSUFBQUEsSUFBSSxFQUFFLFFBRkk7QUFHVmMsSUFBQUEsUUFBUSxFQUFFLENBQUMsTUFBRCxDQUhBO0FBSVZDLElBQUFBLFVBQVUsRUFBRTtBQUNWWixNQUFBQSxJQUFJLEVBQUU7QUFDSkgsUUFBQUEsSUFBSSxFQUFFLFFBREY7QUFFSlcsUUFBQUEsS0FBSyxFQUFFO0FBRkgsT0FESTtBQUtWSyxNQUFBQSxVQUFVLEVBQUU7QUFDVmhCLFFBQUFBLElBQUksRUFBRSxPQURJO0FBRVZXLFFBQUFBLEtBQUssRUFBRSx1QkFGRztBQUdWTSxRQUFBQSxLQUFLLEVBQUU7QUFDTGpCLFVBQUFBLElBQUksRUFBRSxRQUREO0FBRUxrQixVQUFBQSxPQUFPLEVBQUU7QUFGSjtBQUhHLE9BTEY7QUFhVixTQUFHekIsSUFBSSxDQUFDMEI7QUFiRTtBQUpGLEdBTEc7QUEwQmZDLEVBQUFBLFFBQVEsRUFBRTtBQUNSakIsSUFBQUEsSUFBSSxFQUFFO0FBQ0osbUJBQWE7QUFEVCxLQURFO0FBSVJhLElBQUFBLFVBQVUsRUFBRTtBQUNWLG9CQUFjO0FBQ1pLLFFBQUFBLFNBQVMsRUFBRTtBQURDO0FBREo7QUFKSixHQTFCSztBQXFDZkMsRUFBQUEsa0JBQWtCLEVBQUVDLFFBQVEsSUFBSSxXQUFXQSxRQUFRLENBQUNwQixJQXJDckM7QUFzQ2ZFLEVBQUFBLGFBQWEsRUFBRUE7QUF0Q0EsQ0FBakIiLCJzb3VyY2VSb290IjoiL1ZvbHVtZXMvYnAvYm90cHJlc3MvbW9kdWxlcy9idWlsdGluL3NyYy9iYWNrZW5kIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmFzZSA9IHJlcXVpcmUoJy4vX2Jhc2UnKVxuXG5mdW5jdGlvbiByZW5kZXIoZGF0YSkge1xuICBjb25zdCBldmVudHMgPSBbXVxuXG4gIGlmIChkYXRhLnR5cGluZykge1xuICAgIGV2ZW50cy5wdXNoKHtcbiAgICAgIHR5cGU6ICd0eXBpbmcnLFxuICAgICAgdmFsdWU6IGRhdGEudHlwaW5nXG4gICAgfSlcbiAgfVxuXG4gIHJldHVybiBbXG4gICAgLi4uZXZlbnRzLFxuICAgIHtcbiAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgIG1hcmtkb3duOiB0cnVlLFxuICAgICAgdGV4dDogZGF0YS50ZXh0XG4gICAgfVxuICBdXG59XG5cbmZ1bmN0aW9uIHJlbmRlck1lc3NlbmdlcihkYXRhKSB7XG4gIHJldHVybiBbXG4gICAge1xuICAgICAgdHlwZTogJ3R5cGluZycsXG4gICAgICB2YWx1ZTogZGF0YS50eXBpbmdcbiAgICB9LFxuICAgIHtcbiAgICAgIHRleHQ6IGRhdGEudGV4dFxuICAgIH1cbiAgXVxufVxuXG5mdW5jdGlvbiByZW5kZXJFbGVtZW50KGRhdGEsIGNoYW5uZWwpIHtcbiAgaWYgKGNoYW5uZWwgPT09ICd3ZWInIHx8IGNoYW5uZWwgPT09ICdhcGknIHx8IGNoYW5uZWwgPT09ICd0ZWxlZ3JhbScpIHtcbiAgICByZXR1cm4gcmVuZGVyKGRhdGEpXG4gIH0gZWxzZSBpZiAoY2hhbm5lbCA9PT0gJ21lc3NlbmdlcicpIHtcbiAgICByZXR1cm4gcmVuZGVyTWVzc2VuZ2VyKGRhdGEpXG4gIH1cblxuICByZXR1cm4gW10gLy8gVE9ET1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaWQ6ICdidWlsdGluX3RleHQnLFxuICBncm91cDogJ0J1aWx0LWluIE1lc3NhZ2VzJyxcbiAgdGl0bGU6ICdUZXh0JyxcblxuICBqc29uU2NoZW1hOiB7XG4gICAgZGVzY3JpcHRpb246ICdBIHJlZ3VsYXIgdGV4dCBtZXNzYWdlIHdpdGggb3B0aW9uYWwgdHlwaW5nIGluZGljYXRvcnMgYW5kIGFsdGVybmF0ZXMnLFxuICAgIHR5cGU6ICdvYmplY3QnLFxuICAgIHJlcXVpcmVkOiBbJ3RleHQnXSxcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0ZXh0OiB7XG4gICAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgICB0aXRsZTogJ01lc3NhZ2UnXG4gICAgICB9LFxuICAgICAgdmFyaWF0aW9uczoge1xuICAgICAgICB0eXBlOiAnYXJyYXknLFxuICAgICAgICB0aXRsZTogJ0FsdGVybmF0ZXMgKG9wdGlvbmFsKScsXG4gICAgICAgIGl0ZW1zOiB7XG4gICAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgICAgZGVmYXVsdDogJydcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC4uLmJhc2UudHlwaW5nSW5kaWNhdG9yc1xuICAgIH1cbiAgfSxcblxuICB1aVNjaGVtYToge1xuICAgIHRleHQ6IHtcbiAgICAgICd1aTp3aWRnZXQnOiAndGV4dGFyZWEnXG4gICAgfSxcbiAgICB2YXJpYXRpb25zOiB7XG4gICAgICAndWk6b3B0aW9ucyc6IHtcbiAgICAgICAgb3JkZXJhYmxlOiBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICBjb21wdXRlUHJldmlld1RleHQ6IGZvcm1EYXRhID0+ICdUZXh0OiAnICsgZm9ybURhdGEudGV4dCxcbiAgcmVuZGVyRWxlbWVudDogcmVuZGVyRWxlbWVudFxufVxuIl19