version: 0.2

env:
  variables:
    CHILD_CONCURRENCY: 1
    GULP_SERIES: true

phases:
  install:
    commands:
      - npm install -g yarn

  pre_build:
    commands:
      - echo $CODEBUILD_SOURCE_VERSION
      - echo " HEY $CODEBUILD_SOURCE_VERSION"
      - echo "VERSION $(./build/artifact_name.sh)"
      - yarn install
      - (cd build/module-builder && yarn install && yarn build)

  build:
    commands:
      - (cd src/bp/ui-admin && yarn install && yarn build)
      # OSX Build
      - export npm_config_target_platform=darwin
      - yarn run build --mac
      - yarn run package --mac
      - mkdir -p out/binaries/data/storage
      - touch out/binaries/data/storage/.keep
      - mv out out_darwin
      # Windows Build
      - export npm_config_target_platform=windows
      - yarn run build --win32
      - yarn run package --win32
      - mkdir -p out/binaries/data/storage
      - touch out/binaries/data/storage/.keep
      - mv out out_win32
      # Linux Build
      - export npm_config_target_platform=linux
      - yarn run build --linux
      - yarn run package --linux
      - mkdir -p out/binaries/data/storage
      - touch out/binaries/data/storage/.keep
      - mv out out_linux

artifacts:
  files:
    - '**/*'
  base-directory: out_darwin/binaries
  name: botpress-$(./build/artifact_name.sh)-darwin-x64.zip

secondary-artifacts:
  linux:
    files:
      - '**/*'
    base-directory: out_linux/binaries
    name: botpress-$(./build/artifact_name.sh)-linux-x64.zip
  windows:
    files:
      - '**/*'
    base-directory: out_win32/binaries
    name: botpress-$(./build/artifact_name.sh)-win-x64.zip

cache:
  paths:
    - node_modules
    - modules/**/node_modules
    - build/module-builder/node_modules
