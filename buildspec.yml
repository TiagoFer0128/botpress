version: 0.2

env:
  variables:
    CHILD_CONCURRENCY: 1
    GULP_SERIES: true

phases:
  install:
    commands:
      - npm install -g yarn

  pre_build:
    commands:
      - $(./build/codebuild-extras.sh)
      - echo "BUILDING FOR '$ARTIFACT_NAME'"
      #- yarn install
      #- (cd build/module-builder && yarn install && yarn build)
      - apt-get update
      - apt-get install p7zip-full

  build:
    commands:
      - ls -la $CODEBUILD_SRC_DIR/build/native-extensions/windows/7z.sfx
      - stat $CODEBUILD_SRC_DIR/build/native-extensions/windows/7z.sfx
      - (cp $CODEBUILD_SRC_DIR/build/native-extensions/windows/7z.sfx . && ll && 7z a -sfx'7z.sfx' windows_sfx.exe ./src/* )
      #- 7z a -sfx$CODEBUILD_SRC_DIR/build/native-extensions/windows/7z.sfx $CODEBUILD_SRC_DIR/windows_sfx.exe $CODEBUILD_SRC_DIR/bp/*
      - (cd src/bp/ui-admin && yarn install && yarn build)
      # OSX Build
      - export npm_config_target_platform=darwin
      # Twice because of potential OS-specific errors
      - yarn install --force --ignore-engines
      - yarn install --force --ignore-engines
      - yarn run build --mac
      - yarn run package --mac
      - mkdir -p out/binaries/data/storage
      - touch out/binaries/data/storage/.keep
      - mv out out_darwin
      - mkdir -p out
      # Windows Build
      - export npm_config_target_platform=windows
      - yarn install --force --ignore-engines
      - yarn install --force --ignore-engines
      - yarn run build --win32
      - yarn run package --win32
      - mkdir -p out/binaries/data/storage
      - touch out/binaries/data/storage/.keep
      - mv out out_win32
      - mkdir -p out
      # Linux Build
      - export npm_config_target_platform=linux
      - yarn install --force --ignore-engines
      - yarn run build --linux
      - yarn run package --linux
      - mkdir -p out/binaries/data/storage
      - touch out/binaries/data/storage/.keep
      - mv out out_linux

  post_build:
    commands:
      - ls -a
      - ls -a out_darwin
      - ls -a out_win32
      - ls -a out_linux
      - ls -a build/native-extensions/windows
      - 7z a -sfx"$CODEBUILD_SRC_DIR/build/native-extensions/windows/7z.sfx" $CODEBUILD_SRC_DIR/windows_sfx.exe $CODEBUILD_SRC_DIR/out_win32/binaries/*
      - ls -a

artifacts:
  base-directory: $CODEBUILD_SRC_DIR
  name: botpress-$ARTIFACT_NAME-all-x64.zip
  files:
    - 'out_*/**/*'

  secondary-artifacts:
    darwin:
      base-directory: $CODEBUILD_SRC_DIR/out_darwin/binaries
      name: botpress-$ARTIFACT_NAME-darwin-x64.zip
      files:
        - '**/*'

    linux:
      base-directory: $CODEBUILD_SRC_DIR/out_linux/binaries
      name: botpress-$ARTIFACT_NAME-linux-x64.zip
      files:
        - '**/*'

    windows:
      base-directory: $CODEBUILD_SRC_DIR/out_win32/binaries
      name: botpress-$ARTIFACT_NAME-win-x64.zip
      files:
        - '**/*'

    windows_sfx:
      base-directory: $CODEBUILD_SRC_DIR
      name: botpress-$ARTIFACT_NAME-win-x64-sfx.exe
      files:
        - 'windows_sfx.exe'

  cache:
    paths:
      - node_modules
      - modules/**/node_modules
      - build/module-builder/node_modules
